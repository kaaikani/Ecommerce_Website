/// <reference types="@cloudflare/workers-types" />
import type { AppLoadContext, ServerBuild } from "@remix-run/cloudflare";
/**
 * A function that returns the value to use as `context` in route `loader` and
 * `action` functions.
 *
 * You can think of this as an escape hatch that allows you to pass
 * environment/platform-specific values through to your loader/action.
 */
export type GetLoadContextFunction<Env = unknown> = (context: Parameters<PagesFunction<Env>>[0]) => Promise<AppLoadContext> | AppLoadContext;
export type RequestHandler<Env = any> = PagesFunction<Env>;
export interface createPagesFunctionHandlerParams<Env = any> {
    build: ServerBuild;
    getLoadContext?: GetLoadContextFunction<Env>;
    mode?: string;
}
export declare function createRequestHandler<Env = any>({ build, getLoadContext, mode, }: createPagesFunctionHandlerParams<Env>): RequestHandler<Env>;
export declare function createPagesFunctionHandler<Env = any>({ build, getLoadContext, mode, }: createPagesFunctionHandlerParams<Env>): (context: EventContext<Env, any, any>) => Promise<Response>;
