type Direction = 'asc' | 'desc';
type SortProjection<T> = (x: T) => Comparable;
type ComparablePrimitive = number | string | boolean;
type Comparable = ComparablePrimitive | {
    valueOf(): ComparablePrimitive;
};
type SortPair<T> = readonly [SortProjection<T>, Direction];
type SortRule<T> = SortProjection<T> | SortPair<T>;
export declare function sortBy<T>(sort: SortRule<T>, ...sorts: Array<SortRule<T>>): (array: ReadonlyArray<T>) => Array<T>;
export declare function sortBy<T>(array: ReadonlyArray<T>, ...sorts: Array<SortRule<T>>): Array<T>;
export {};
//# sourceMappingURL=sortBy.d.ts.map